//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Client.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/addUser", ReplyAction="http://tempuri.org/IService1/addUserResponse")]
        bool addUser(string email, string fname, string lname, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/addUser", ReplyAction="http://tempuri.org/IService1/addUserResponse")]
        System.Threading.Tasks.Task<bool> addUserAsync(string email, string fname, string lname, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getSingleUser", ReplyAction="http://tempuri.org/IService1/getSingleUserResponse")]
        bool getSingleUser(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getSingleUser", ReplyAction="http://tempuri.org/IService1/getSingleUserResponse")]
        System.Threading.Tasks.Task<bool> getSingleUserAsync(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/checkUser", ReplyAction="http://tempuri.org/IService1/checkUserResponse")]
        bool checkUser(string email, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/checkUser", ReplyAction="http://tempuri.org/IService1/checkUserResponse")]
        System.Threading.Tasks.Task<bool> checkUserAsync(string email, string password);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : Client.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<Client.ServiceReference1.IService1>, Client.ServiceReference1.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool addUser(string email, string fname, string lname, string password) {
            return base.Channel.addUser(email, fname, lname, password);
        }
        
        public System.Threading.Tasks.Task<bool> addUserAsync(string email, string fname, string lname, string password) {
            return base.Channel.addUserAsync(email, fname, lname, password);
        }
        
        public bool getSingleUser(string email) {
            return base.Channel.getSingleUser(email);
        }
        
        public System.Threading.Tasks.Task<bool> getSingleUserAsync(string email) {
            return base.Channel.getSingleUserAsync(email);
        }
        
        public bool checkUser(string email, string password) {
            return base.Channel.checkUser(email, password);
        }
        
        public System.Threading.Tasks.Task<bool> checkUserAsync(string email, string password) {
            return base.Channel.checkUserAsync(email, password);
        }
    }
}
